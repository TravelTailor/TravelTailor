<head>
 <link
        rel="stylesheet"
        type="text/css"
        href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    />
<script
        type="text/javascript"
        src="https://opentripmap.io/js/directory.en.js"
    ></script>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.12.0/css/all.css">
</head>



<body style="margin-top: 77px;">
    <!-- Start: Ludens - Create-Edit Form -->
    <div class="container-fluid"><a class="btn btn-link link-primary mb-3" role="button" href="services.html"><i class="fas fa-arrow-left"></i>&nbsp;Back</a>
        <div class="d-sm-flex justify-content-between align-items-center mb-4">
            <h3 class="text-dark mb-0">Add task to your travel</h3>
        </div>
        <form action="/travel-list/{{travel._id}}/create-task" method="POST">
            <div class="card shadow mb-3">
                <div class="card-header py-3">
                    <p class="text-primary m-0 fw-bold">Fill in the required fields *</p>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-12 col-md-8 col-lg-8">
                            <div class="mb-3"><label class="form-label" for="service_name"><strong>Task *</strong></label><input class="form-control" type="text" id="task" placeholder="Task" name="task" required=""></div>
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-4">
                            <div class="mb-3"><label class="form-label" for="service_price"><strong>Price *</strong></label><input class="form-control" type="text" id="price" placeholder="0000" name="price" required=""></div>
                        </div>
                        <div class="col">
                            <div class="mb-3"></div>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col">
                            <div class="mb-3"><label class="form-label" for="service_client_start_date"><strong>Date *</strong></label><input class="form-control" id="date" type="date" name="date" required=""></div>
                        </div>
                        <div class="col">
                            <div class="mb-3"><label class="form-label" for="service_client_end_date"><strong>Status *</strong></label><select class="form-select" id="status" name="status">
                                    <option value="Pending">Pending</option>
                                    <option value="Done" selected="">Done</option>
                                </select></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="text-end mb-3"><button class="btn btn-primary btn-lg" type="submit">Add task</button><a class="btn btn-danger btn-lg" role="button" href="/travel-list/{{travel._id}}" style="margin-left: 11px;">Back to your travel to {{travel.city}} from {{formatDate travel.startDate}} to {{formatDate travel.endDate}}</a></div>
        </form>
    </div><!-- End: Ludens - Create-Edit Form -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
</body>




<h3>Task search:</h3>
<div class="container">
    <form id="search_form" class="input-group mb-4 border p-1">
        <div class="input-group-prepend border-0">
            <button id="button-search" type="submit" class="btn btn-link ">
                <i class="fa fa-search"></i>
            </button>
        </div>
        <input
            id="textbox"
            type="search"
            placeholder="Type {{travel.city}}"
            aria-describedby="button-search"
            class="form-control bg-none border-0"
        />
    </form>

    <div id="info" class="alert alert-primary"></div>
    <div class="row">
        <div class="col-12 col-lg-5">
            <div id="list" class="list-group"></div>
            <nav class="text-center">
                <button id="next_button" type="button" class="btn btn-primary">
                    Next
                </button>
            </nav>
        </div>
        <div class="col-12 col-lg-7">
            <div id="poi" class="alert"></div>
        </div>
    </div>
</div>

<html>
  <script>
    //You should get your API key at https://opentripmap.io
    const apiKey = "{{apiKey}}"; 

    function apiGet(method, query) {
        return new Promise(function (resolve, reject) {
            var otmAPI =
                "https://api.opentripmap.com/0.1/en/places/" +
                method +
                "?apikey=" +
                apiKey;
            if (query !== undefined) {
                otmAPI += "&" + query;
            }
            fetch(otmAPI)
                .then(response => response.json())
                .then(data => resolve(data))
                .catch(function (err) {
                    console.log("Fetch Error :-S", err);
                });
        });
    }

    const pageLength = 5;

    let offset = 0;
    let lon = 0;
    let lat = 0;
    let count = 0;

    function onShowPOI(data) {
        let poi = document.getElementById("poi");
        poi.innerHTML = "";
        if (data.preview) {
            poi.innerHTML += `<img src="${data.preview.source}">`;
        }
        poi.innerHTML += data.wikipedia_extracts
            ? data.wikipedia_extracts.html
            : data.info
                ? data.info.descr
                : "No description";

        poi.innerHTML += `<p><a target="_blank" href="${data.otm}">Show more at OpenTripMap</a></p>`;
    }

    function createListItem(item) {
        let a = document.createElement("a");
        a.className = "list-group-item list-group-item-action";
        a.setAttribute("data-id", item.xid);
        a.innerHTML = `<h5 class="list-group-item-heading">${item.name}</h5>
          <p class="list-group-item-text">${getCategoryName(item.kinds)}</p>`;

        a.addEventListener("click", function () {
            document.querySelectorAll("#list a").forEach(function (item) {
                item.classList.remove("active");
            });
            this.classList.add("active");
            let xid = this.getAttribute("data-id");
            apiGet("xid/" + xid).then(data => onShowPOI(data));
        });
        return a;
    }

    function loadList() {
        apiGet(
            "radius",
            `radius=1000&limit=${pageLength}&offset=${offset}&lon=${lon}&lat=${lat}&rate=2&format=json`
        ).then(function (data) {
            let list = document.getElementById("list");
            list.innerHTML = "";
            data.forEach(item => list.appendChild(createListItem(item)));
            let nextBtn = document.getElementById("next_button");
            if (count < offset + pageLength) {
                nextBtn.style.visibility = "hidden";
            } else {
                nextBtn.style.visibility = "visible";
                nextBtn.innerText = `Next (${offset + pageLength} of ${count})`;
            }
        });
    }

    function firstLoad() {
        apiGet(
            "radius",
            `radius=1000&limit=${pageLength}&offset=${offset}&lon=${lon}&lat=${lat}&rate=2&format=count`
        ).then(function (data) {
            count = data.count;
            offset = 0;
            document.getElementById(
                "info"
            ).innerHTML += `<p>${count} objects with description in a 1km radius</p>`;
            loadList();
        });
    }

    document
        .getElementById("search_form")
        .addEventListener("submit", function (event) {
            let name = document.getElementById("textbox").value;
            apiGet("geoname", "name=" + name).then(function (data) {
                let message = "Name not found";
                if (data.status == "OK") {
                    message = data.name + ", " + getCountryName(data.country);
                    lon = data.lon;
                    lat = data.lat;
                    firstLoad();
                }
                document.getElementById("info").innerHTML = `<p>${message}</p>`;
            });
            event.preventDefault();
        });

    document
        .getElementById("next_button")
        .addEventListener("click", function () {
            offset += pageLength;
            loadList();
        });
</script>
</html>
</html>